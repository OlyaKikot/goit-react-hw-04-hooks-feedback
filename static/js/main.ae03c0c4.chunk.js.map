{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/ucFirst.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","default","Statistics","good","neutral","bad","total","positivePercentage","nameGood","nameNeutral","nameBad","name","namePositive","FeedbackOptions","options","onLeaveFeedback","map","item","type","onClick","e","target","value","button","str","toUpperCase","slice","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","state","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,YAAc,gCAAgC,QAAU,4BAA4B,aAAe,mC,mBCA7LD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,qICCX,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAIC,UAAWC,IAAEC,QAAjB,SAA2BH,I,oBCArB,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,mCACGD,EAAQ,EACP,qCACE,uBAAMP,UAAWC,IAAEQ,SAAnB,mBAAoCL,KACpC,uBAAMJ,UAAWC,IAAES,YAAnB,sBAA0CL,KAC1C,uBAAML,UAAWC,IAAEU,QAAnB,kBAAkCL,KAClC,uBAAMN,UAAWC,IAAEW,KAAnB,oBAAiCL,KACjC,uBAAMP,UAAWC,IAAEY,aAAnB,iCACuBL,EADvB,UAKF,cAACV,EAAD,CAAcC,QAAQ,wB,oBCpBf,SAASe,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SAELC,QAAS,SAACC,GAAD,OAAOL,EAAgBK,EAAEC,OAAOC,QACzCA,MAAOL,EACPlB,UAAWC,IAAEuB,OALf,UCPuBC,EDcZP,ECbZO,EACEA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GADvBF,IDQJP,GCTA,IAAgBO,O,oBCEhB,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,qCACE,oBAAI9B,UAAWC,IAAE4B,MAAjB,SAAyBA,IACxBC,KCuDQC,MAxDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB6B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO1B,EAAP,KAAY6B,EAAZ,KAqBMC,EAAqB,WACzB,OAAOhC,EAAOC,EAAUC,GAU1B,OACE,qCACE,cAACsB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACf,EAAD,CACEC,QAASsB,OAAOC,KAAK,CAAElC,OAAMC,UAASC,QACtCU,gBAnCgB,SAACO,GACvB,OAAQA,GACN,IAAK,OACHU,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,KAC1B,MAEF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MAEF,QACE,aAwBF,cAACX,EAAD,CAASC,MAAM,aAAf,SACE,cAAC1B,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,IACP5B,mBArBF4B,IACKI,KAAKC,MAAOrC,EAAOgC,IAAwB,KAE7C,UCzBIM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae03c0c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Statistics_name__3w7rC\",\"nameGood\":\"Statistics_nameGood__3kONd\",\"nameNeutral\":\"Statistics_nameNeutral__2zXlJ\",\"nameBad\":\"Statistics_nameBad__2gQ-m\",\"namePositive\":\"Statistics_namePositive__IFkCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Notification_default__21c-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1SoNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__ey6uR\"};","import PropTypes from \"prop-types\";\nimport s from \"../Notification/Notification.module.css\";\nexport default function Notification({ message }) {\n  return <h2 className={s.default}>{message}</h2>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport Notification from \"../Notification\";\nimport s from \"../Statistics/Statistics.module.css\";\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      {total > 0 ? (\n        <>\n          <span className={s.nameGood}>Good: {good}</span>\n          <span className={s.nameNeutral}>Neutral: {neutral}</span>\n          <span className={s.nameBad}>Bad: {bad}</span>\n          <span className={s.name}>Total: {total}</span>\n          <span className={s.namePositive}>\n            PositivePercentage: {positivePercentage}%\n          </span>\n        </>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import ucFirst from \"../ucFirst.js\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map((item) => (\n        <button\n          type=\"button\"\n          key={item}\n          onClick={(e) => onLeaveFeedback(e.target.value)}\n          value={item}\n          className={s.button}\n        >\n          {ucFirst(item)}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","export default function ucFirs(str) {\n  if (!str) return str;\n  return str[0].toUpperCase() + str.slice(1);\n}\n","import PropTypes from \"prop-types\";\nimport s from \"../Section/Section.module.css\";\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import { useState } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = (value) => {\n    switch (value) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (countTotalFeedback()) {\n      return Math.round((good / countTotalFeedback()) * 100);\n    }\n    return 0;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys({ good, neutral, bad })}\n          onLeaveFeedback={handleIncrement}\n        ></FeedbackOptions>\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        ></Statistics>\n      </Section>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}